100 REM			*** PROGRAM PJFRAME ***
105 REM 	AUTHOR:
110 REM				DAVID K. BROWN
112 REM		DEPARTMENT OF MECHANICAL ENGINEERING
115	REM			 UNIVERSITY OF GLASGOW
120 REM 			  SCOTLAND
125	REM		
130 REM				JUNE 1989
135	REM				(VERSION 8/06/89)
140 REM		** THE PROGRAM WILL ANALYSE PLANE
141 REM		   FRAME/TRUSS PROBLEMS WITH UP TO 
142 REM		   40 NODES AND 40 MEMBERS.	  		**
145 REM 	
146 REM 	** LOADING IS APPLIED THROUGH COORDINATE
147 REM		   NODAL FORCES AND 4 TYPES OF DISPLACEMENT
148 REM 	   BOUNDARY CONDITIONS ARE ALLOWED. **
149 REM
150 REM		** DATA INPUT IS FROM THE USER VIA THE KEYBOARD
151 REM		   (IN RESPONSE TO PROMPTS APPEARING ON THE SCREEN). **
153 REM
155 REM     ** OUTPUT IS SEND DIRECT TO THE PRINTER AND CONSISTS OF:
156 REM			NODAL DISPLACEMENTS AND FORCES;
157 REM 		MEMBER FORCES, STRESSES AND ELONGATIONS.   		 **
160 REM
170 REM
220 PN$ = "PJFRAME"
225 GOSUB 50140 : REM CLEARSCREEN
230 MX = 40 : REM MAX # OF MEMBERS
240 NX = 40 : REM MAX # OF NODES
245 NF = 2*NX : REM MAX # OF DEGREES OF FREEDOM
260 DIM NI(MX),NJ(MX),A(MX),E(MX)
270 DIM P(NF),PO(NF+2)
280 DIM X(NX),Y(NX),KODE(NX)
290 DIM KS(NF,NF),KH(NF,NF)
300 DIM PH(NF),F(NF),SP$(NS)
310 IF = 0
320 FOR I = 1 TO NF : PO(I) = 0 : P(I) = 0 : PH(I) = 0 : F(I) = 0 : NEXT I
330 FOR I = 1 TO NF
340 FOR J = 1 TO NF
350 KH(I,J) = 0 : KS(I,J) = 0
360 NEXT J
370 NEXT I
380 IF IR = 1 THEN 600 
390 REM		** DATA IS NOW REQUESTED
400 TM$ = "TOO MANY " : MA$ = " MAXIMUM ALLOWED = "
410 PRINT "HOW MANY MEMBERS IN THE STRUCTURE "; : INPUT NM
420 IF NM > MX THEN PRINT TM$;"MEMBERS,";MA$;MX : GOTO 410
430 PRINT "HOW MANY NODES "; : INPUT NN
440 IF NN > NX THEN PRINT TM$;"NODES,";MA$;NX : GOTO 430
450 PRINT : PRINT
460 PRINT "      NODAL DATA IS REQUIRED" : PRINT
470 PRINT "     NODE NUMBER  "; : INPUT I
480 IF I < 1 OR I > NN THEN PRINT "INVALID NODE NUMBER " : GOTO 470
490 PRINT "TYPE IN KODE (SEE SHEET) "; : INPUT KODE(I)
500 IF KODE(I) < 1 OR KODE(I) > 4 THEN PRINT "INVALID KODE " : GOTO 490
510 PRINT "X,Y COORDS OF NODE";I;"  "; : INPUT X(I),Y(I)
520 PRINT
530 PRINT "APPLIED X,Y FORCES "
540 PRINT "     AT NODE";I;"  ";
550 INPUT PO(2*I-1),PO(2*I) : PRINT
560 PRINT "ANY MORE NODES OR CORRECTIONS [Y/N] ";
570 INPUT AN$ : L1$ = LEFT$(AN$,1)
580 IF L1$ = "Y" OR L1$ = "y" THEN GOTO 470
590 IF L1$ <> "N" AND L1$ <> "n" THEN GOTO 560
600 PRINT "DO YOU WISH A PRINT-OUT OF THE NODAL DATA [Y/N] ";
610 INPUT AN$ : L1$ = LEFT$(AN$,1)
620 IF L1$ = "N" OR L1$ = "n" THEN GOTO 800
630 IF L1$ <> "Y" AND L1$ <> "y" THEN GOTO 600 
640 GOSUB 60120 : REM OPEN PRINTER CHANNEL
650 P$ = "          ****   PROGRAM " + PN$ + "     ****"
660 GOSUB 60000 : IP = 2 : GOSUB 60060
670 P$ = " N KODE    X           Y"
680 P$ = " " + P$
690 P$ = P$ + "          PX          PY" : GOSUB 60000
700 FW = 12 : NS = 3
710 FOR I = 1 TO NN
720 XA = I : GOSUB 30000 : P$ = XA$
730 XA = KODE(I) : GOSUB 30000 : P$ = P$ + XA$
740 XS = X(I) : GOSUB 10040 : P$ = P$ + XS$
750 XS = Y(I) : GOSUB 10040 : P$ = P$ + XS$
760 XS = PO(2*I - 1) : GOSUB 10040 : P$ = P$ + XS$
770 XS = PO(2*I) : GOSUB 10040 : P$ = P$ + XS$ : GOSUB 60000
780 NEXT I
790 GOSUB 60130 : REM CLOSE PRINTER CHANNEL
800 PRINT "DO YOU WISH TO CORRECT THE DATA [Y/N] ";
810 INPUT AN$ : L1$ = LEFT$(AN$,1)
820 IF L1$ = "Y" OR L1$ = "y" THEN GOTO 460
830 IF L1$ <> "N" AND L1$ <> "N" THEN GOTO 800
840 IF IR = 1 THEN GOTO 970
850 N = 2*NN
860 GOSUB 50140
870 PRINT "        MEMBER DATA IS REQUIRED"
880 PRINT : PRINT : PRINT "INPUT THE MEMBER #,& THE I,J OF ITS END NODES";
890 INPUT L, NI(L), NJ(L)
900 IF L < 1 OR L > NM THEN PRINT "INVALID MEMBER NUMBER" : GOTO 880
910 PRINT "INPUT THE AREA AND ELASTIC MODULUS OF THE MEMBER ";
920 INPUT A(L), E(L)
930 PRINT : PRINT "ANY MORE MEMBERS OR CORRECTIONS [Y/N] ";
940 INPUT AN$ : L1$=LEFT$(AN$,1)
950 IF L1$ = "Y" OR L1$ = "y" THEN GOTO 880
960 IF L1$ <> "N" AND L1$ <> "n" THEN GOTO 930 
970 PRINT "DO YOU WISH A PRINT-OUT OF MEMBER DATA [Y/N] ";
980 INPUT AN$ : L1$ = LEFT$(AN$,1)
990 IF L1$ = "N" OR L1$ = "n" THEN GOTO 1120
1000 IF L1$ <> "Y" AND L1$ <> "y" THEN GOTO 970
1010 GOSUB 60120 : REM OPEN PRINTER CHANNEL
1020 GOSUB 60040 
1030 P$ = "  M  NI  NJ  AREA        E" : GOSUB 60000
1040 FOR L = 1 TO NM
1050 XA = L : GOSUB 30000 : P$ = XA$ + " "
1060 XA = NI(L) : GOSUB 30000 : P$ = P$ + XA$ + "  "
1070 XA = NJ(L) : GOSUB 30000 : P$ = P$ + XA$ + "  "
1080 XA = A(L) : GOSUB 10000 : P$ = P$ + XS$
1090 XS = E(L) : GOSUB 10000 : P$ = P$ + XS$ : GOSUB 60000
1100 NEXT L
1110 GOSUB 60130 : REM CLOSE PRINTER CHANNEL
1120 PRINT "DO YOU WISH TO CORRECT THE DATA [Y/N]  ";
1130 INPUT AN$ : L1$ = LEFT$(AN$,1)
1140 IF L1$ = "Y" OR L1$ = "y" THEN GOTO 880
1150 IF L1$ <> "N" AND L1$ <> "n" THEN GOTO 1120
1160 GOSUB 50140 : PRINT " PROGRAM " + PN$ + " IS NOW RUNNING ....."
1170 FOR I = 1 TO 5 : PRINT : NEXT I
1180 REM ** SCAN THROUGH ALL MEMBERS DETERMINING
1190 REM    ALL THEIR STIFFNESS COEFFICIENTS AND
1200 REM    LODGING THEM IN THE UNCONDENSED
1210 REM    GLOBAL STIFFNESS MATRIX [KS].        **
1220 REM
1230 L1 = 0
1240 L = 0
1250 L = L + 1
1260 II = NI(L)
1270 JJ = NJ(L)
1280 K = 2*NJ(L)
1290 M = 2*NI(L)
1300 GOTO 3390
1310 Z = -1
1320 J = 1
1330 ON J GOTO 1440,1370,1400,1340,1500
1340 Z = 1
1350 K = 2*NJ(L)
1360 GOTO 1440
1370 Z = 1
1380 K = 2*NI(L)
1390 GOTO 1440
1400 Z = -1
1410 M = 2*NJ(L)
1420 REM ** LOCATE STIFFNESS COEFFICIENTS
1430 REM    INTO STIFFNESS MATRIX.
1440 KS(K-1,M-1)=KS(K-1,M-1)+Z*CL*CL*E(L)*A(L)/DL
1450 KS(K-1,M)=KS(K,M-1)+Z*CM*CL*E(L)*A(L)/DL
1460 KS(K,M-1)=KS(K,M-1)+Z*CM*CL*E(L)*A(L)/DL
1470 KS(K,M) = KS(K,M) + Z*CM*CM*E(L)*A(L)/DL
1480 J = J + 1
1490 GOTO 1330
1500 IF L - NM >= 0 THEN GOTO 1540
1510 IF L - NM < 0 THEN GOTO 1250
1520 REM **  HOLD UNCONDENSED LOAD VECTOR [P] IN [PH],
1530 REM     HOLD UNCONDENSED STIFFNESS MATRIX [KS] IN [KH]. **
1540 FOR I = 1 TO N
1550 P(I) = PO(I)
1560 PH(I) = P(I)
1570 NEXT I
1580 FOR I = 1 TO N
1590 FOR J = 1 TO N
1600 KH(I,J) = KS(I,J)
1610 NEXT J
1620 NEXT I
1630 REM ** USING KODE AT EACH NODE,
1640 REM    PROGRESSIVELY CONDENSE THE
1650 REM    STIFFNESS MATRIX [KS] AND HOLD
1660 REM    FINALLY IN [KS]; SIMILARLY
1670 REM    CONDENSE [P] INTO [P].         **
1680 MZ = 1
1690 FOR IJ = 1 TO NN : REM&987654321 THIS LOOP ENDS AT REM&123456789
1700 ON KODE(IJ) GOTO 2030,1890,1750,1720
1710 PRINT "KODE(";IJ;") WRONG" : GOTO 3640
1720 MZ = MZ + 2
1730 GOTO 2140
1740 REM
1750 FOR I = MZ TO N
1760 P(I) = P(I+1)
1770 FOR J = 1 TO N 
1780 KS(I,J) = KS(I+1,J)
1790 NEXT J
1800 NEXT I
1810 FOR J = MZ TO N
1820 FOR I = 1 TO N
1830 KS(I,J) = KS(I,J+1)
1840 NEXT I
1850 NEXT J
1860 MZ = MZ + 1
1870 GOTO 2140
1880 REM
1890 FOR I = MZ TO N
1900 P(I+1) = P(I+2)
1910 FOR J = 1 TO N
1920 KS(I+1,J) = KS(I+2,J)
1930 NEXT J
1940 NEXT I
1950 FOR J = MZ TO N
1960 FOR I = 1 TO N
1970 KS(I,J+1) = KS(I,J+2)
1980 NEXT I
1990 NEXT J
2000 MZ = MZ + 1
2010 GOTO 2140
2020 REM
2030 FOR I = MZ TO N
2040 P(I) = P(I+2)
2050 FOR J = 1 TO N
2060 KS(I,J) = KS(I+2,J)
2070 NEXT J
2080 NEXT I
2090 FOR J = MZ TO N
2100 FOR I = 1 TO N 
2110 KS(I,J) = KS(I,J+2)
2120 NEXT I
2130 NEXT J
2140 NEXT IJ : REM&123456789  THIS LOOP STARTS AT REM&987654321
2150 MZ = MZ - 1
2160 M = MZ
2170 GOSUB 60120 : REM OPEN PRINTER
2180 GOSUB 60040
2190 P$ =  "" : MQ = MZ
2200 IF MQ > 6 THEN MQ = 6 : P$ = "TOP LEFT 6X6 CORNER OF THE "
2210 P$ = P$ + "CONDENSED STIFFNESS MATRIX" : GOSUB 60000
2230 FOR I = 1 TO MQ : P$ = ""
2240 FOR J = 1 TO MQ
2250 XS = KS(I,J) : GOSUB 10040 : P$ = P$ + XS$
2260 NEXT J : GOSUB 60000 : GOSUB 60040
2270 NEXT I
2280 FW = 12 : NS = 4
2290 P$ = "    CONDENSED LOAD VECTOR" : GOSUB 60000
2300 FOR I = 1 TO MZ
2310 XS = P(I) : GOSUB 10000 : P$ = "        " + XS$ : GOSUB 60000
2320 NEXT I
2330 GOSUB 60130 : REM CLOSE PRINTER
2340 PRINT "    DO YOU WISH THE PROGRAM TO CONTINUE [Y/N]  ";
2350 INPUT AN$ : L1$ = LEFT$(AN$,1)
2360 IF L1$ = "N" OR L1$ = "n" THEN GOTO 3640
2370 IF L1$ <> "Y" AND L1$ <> "y" THEN GOTO 2340
2380 REM ** SOLUTION OF EQUATIONS NOW BEGINS
2390 REM    BY GAUSSIAN ELIMINATION          **
2400 M1 = M - 1
2410 FOR I = 1 TO M1
2420 L = I + 1
2430 FOR J = L TO M
2440 IF KS(J,I) = 0 THEN GOTO 2490
2450 FOR K = L TO M
2460 KS(J,K) = KS(J,K) - KS(I,K)*KS(J,I)/KS(I,I)
2470 NEXT K
2480 P(J) = P(J) - P(I)*KS(J,I)/KS(I,I)
2490 NEXT J
2500 NEXT I
2510 P(M) = P(M)/KS(M,M)

